{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R\\\\Documents\\\\Thinkful\\\\Module23 Project Pomodoro Timer\\\\Qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\nimport TimeLeft from \"./TimeLeft\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  //beginning of focus length\n  const [focusLength, setFocusLength] = useState(60 * 25); // const [focusLength, setFocusLength] = useState(3);\n\n  const [breakLength, setBreakLength] = useState(60 * 5);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(focusLength);\n  const [intervalId, setIntervalId] = useState(null); //null when stopped\n\n  const [currentSessionType, setCurrentSessionType] = useState(\"Focus\"); //focus or break\n\n  const [isDisabled, setIsDisabled] = useState(false);\n  useEffect(() => {\n    setTimeLeft(focusLength);\n  }, [focusLength]);\n  useEffect(() => {\n    if (timeLeft < 0) {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/bell.mp3`).play(); //when timer ends and session type is focus, go to break\n\n      if (currentSessionType === 'Focus') {\n        setTimeLeft(breakLength);\n        setCurrentSessionType('Break');\n      } else {\n        setTimeLeft(focusLength);\n        setCurrentSessionType('Focus');\n      }\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    return () => {\n      //cleanup for interval \n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const decrementFocusLength = () => {\n    let newFocusLength = focusLength - 60 * 5;\n\n    if (newFocusLength < 300) {\n      setFocusLength(5 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  const incrementFocusLength = () => {\n    let newFocusLength = focusLength + 60 * 5;\n\n    if (newFocusLength > 60 * 60) {\n      setFocusLength(60 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  }; //beginning of break length\n\n\n  const decrementBreakLength = () => {\n    let newBreakLength = breakLength - 60;\n\n    if (newBreakLength < 60) {\n      setBreakLength(60);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    setBreakLength(breakLength + 60);\n  }; // Timer starts out paused\n\n\n  const playPause = () => {\n    setIsDisabled(true);\n    setIsTimerRunning(prevState => !prevState);\n\n    if (isTimerRunning) {\n      // console.log(isStarted);\n      clearInterval(intervalId); //clear the interval that is stored in intervalID when timer starts\n\n      setIntervalId(null); //puts it back to null once you hit pause\n    } else {\n      //if we are in paused mode\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n      setIntervalId(newIntervalId);\n    } //setinterval makes a new id, returns the id of that timer and saving that as interval id (lets you clear the timer later)\n    //line 75 clears it\n\n  };\n\n  const stopSession = () => {\n    setIsDisabled(false);\n    setTimeLeft(focusLength);\n    setCurrentSessionType('Focus');\n    setIsTimerRunning(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    focusLength: focusLength,\n    decrementFocusLength: decrementFocusLength,\n    incrementFocusLength: incrementFocusLength,\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    breakLength: breakLength,\n    decrementBreakLength: decrementBreakLength,\n    incrementBreakLength: incrementBreakLength,\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopSession,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimeLeft, {\n    focusLength: focusLength,\n    breakLength: breakLength,\n    timeLeft: timeLeft,\n    currentSessionType: currentSessionType,\n    isTimerRunning: isTimerRunning,\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/R/Documents/Thinkful/Module23 Project Pomodoro Timer/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useEffect","classNames","useInterval","Focus","Break","TimeLeft","minutesToDuration","Pomodoro","focusLength","setFocusLength","breakLength","setBreakLength","isTimerRunning","setIsTimerRunning","timeLeft","setTimeLeft","intervalId","setIntervalId","currentSessionType","setCurrentSessionType","isDisabled","setIsDisabled","Audio","process","env","PUBLIC_URL","play","clearInterval","decrementFocusLength","newFocusLength","incrementFocusLength","decrementBreakLength","newBreakLength","incrementBreakLength","playPause","prevState","newIntervalId","setInterval","prevTimeLeft","stopSession","oi"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\nimport TimeLeft from \"./TimeLeft\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  //beginning of focus length\n  const [focusLength, setFocusLength] = useState(60 * 25);\n  // const [focusLength, setFocusLength] = useState(3);\n  const [breakLength, setBreakLength] = useState(60 * 5);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(focusLength);\n  const [intervalId, setIntervalId] = useState(null); //null when stopped\n  const [currentSessionType, setCurrentSessionType] = useState(\"Focus\"); //focus or break\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    setTimeLeft(focusLength);\n  }, [focusLength]);\n\n  useEffect(() => {\n    if (timeLeft < 0) {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/bell.mp3`).play();\n      //when timer ends and session type is focus, go to break\n      if (currentSessionType === 'Focus') {\n        setTimeLeft(breakLength);\n        setCurrentSessionType('Break');\n      } else {\n        setTimeLeft(focusLength);\n        setCurrentSessionType('Focus');\n      }\n    }\n  }, [timeLeft]);\n\n  useEffect(() => {\n    return () => {\n      //cleanup for interval \n      clearInterval(intervalId);\n    }\n  }, [])\n\n  const decrementFocusLength = () => {\n    let newFocusLength = focusLength - 60 * 5;\n    if (newFocusLength < 300) { \n      setFocusLength(5 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  const incrementFocusLength = () => {\n    let newFocusLength = focusLength + 60 * 5;\n    if (newFocusLength > 60 * 60) {\n      setFocusLength(60 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  //beginning of break length\n  const decrementBreakLength = () => {\n    let newBreakLength = breakLength - 60;\n    if (newBreakLength < 60) {\n      setBreakLength(60);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    setBreakLength(breakLength + 60);\n  };\n\n  // Timer starts out paused\n  const playPause = () => {\n    setIsDisabled(true);\n    setIsTimerRunning((prevState) => !prevState);\n\n    if (isTimerRunning) {\n     // console.log(isStarted);\n      clearInterval(intervalId); //clear the interval that is stored in intervalID when timer starts\n      setIntervalId(null); //puts it back to null once you hit pause\n    } else {\n      //if we are in paused mode\n      const newIntervalId = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n        \n      setIntervalId(newIntervalId);\n    }\n      //setinterval makes a new id, returns the id of that timer and saving that as interval id (lets you clear the timer later)\n      //line 75 clears it\n  }\n\n  const stopSession = () => {\n    setIsDisabled(false);\n    setTimeLeft(focusLength);\n    setCurrentSessionType('Focus');\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Focus\n            focusLength={focusLength}\n            decrementFocusLength={decrementFocusLength}\n            incrementFocusLength={incrementFocusLength}\n            isDisabled={isDisabled}\n          />\n        </div>\n        <div className=\"col\">\n          <Break\n            breakLength={breakLength}\n            decrementBreakLength={decrementBreakLength}\n            incrementBreakLength={incrementBreakLength}\n            isDisabled={isDisabled}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n               <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              disabled={isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n        \n            <TimeLeft focusLength={focusLength} breakLength={breakLength} timeLeft={timeLeft} currentSessionType={currentSessionType} isTimerRunning={isTimerRunning} isDisabled={isDisabled} />\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}