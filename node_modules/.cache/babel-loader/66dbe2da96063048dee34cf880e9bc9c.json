{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R\\\\Documents\\\\Thinkful\\\\Module23 Project Pomodoro Timer\\\\Qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\TimeLeft.js\";\nimport React, { useState } from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport { useEffect } from \"react\";\n\nconst TimeLeft = ({\n  focusLength\n}) => {\n  const [timeLeft, setTimeLeft] = useState(focusLength); //change timeLeft whenever focusLength changes\n\n  useEffect(() => {\n    setTimeLeft(focusLength);\n  }, [focusLength]);\n  let timeLeftInMinutesAndSeconds = secondsToDuration(timeLeft);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, timeLeftInMinutesAndSeconds, \" remaining\"));\n};\n\nexport default TimeLeft;","map":{"version":3,"sources":["C:/Users/R/Documents/Thinkful/Module23 Project Pomodoro Timer/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimeLeft.js"],"names":["React","useState","secondsToDuration","useEffect","TimeLeft","focusLength","timeLeft","setTimeLeft","timeLeftInMinutesAndSeconds"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,WAAD,CAAxC,CADoC,CAGpC;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACF,WAAD,CAAX;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,MAAIG,2BAA2B,GAAGN,iBAAiB,CAACI,QAAD,CAAnD;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,2BADH,eAFF,CADF;AAQD,CAlBD;;AAoBA,eAAeJ,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst TimeLeft = ({ focusLength }) => {\r\n  const [timeLeft, setTimeLeft] = useState(focusLength);\r\n\r\n  //change timeLeft whenever focusLength changes\r\n  useEffect(() => {\r\n    setTimeLeft(focusLength);\r\n  }, [focusLength]);\r\n\r\n  let timeLeftInMinutesAndSeconds = secondsToDuration(timeLeft);\r\n\r\n  return (\r\n    <div>\r\n      {/* TODO: Update message below to include time remaining in the current session */}\r\n      <p className=\"lead\" data-testid=\"session-sub-title\">\r\n        {timeLeftInMinutesAndSeconds} remaining\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeLeft;\r\n"]},"metadata":{},"sourceType":"module"}