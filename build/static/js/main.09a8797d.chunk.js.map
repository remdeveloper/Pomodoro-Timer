{"version":3,"sources":["utils/duration/index.js","pomodoro/Focus.js","pomodoro/Break.js","pomodoro/TimeLeft.js","pomodoro/Pomodoro.js","utils/class-names/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Focus","focusLength","decrementFocusLength","incrementFocusLength","isDisabled","focusLengthInMinutes","className","data-testid","type","onClick","disabled","Break","breakLength","decrementBreakLength","incrementBreakLength","breakLengthInMinutes","TimeLeft","timeLeft","currentSessionType","intervalId","isTimerRunning","timeLeftInMinutesAndSeconds","time","percentage","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Pomodoro","classNameToBoolean","useState","setFocusLength","setBreakLength","setIsTimerRunning","setTimeLeft","setIntervalId","setCurrentSessionType","setIsDisabled","useEffect","Audio","process","play","clearInterval","newFocusLength","newBreakLength","aria-label","title","prevState","newIntervalId","setInterval","prevTimeLeft","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a8797d.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\n\r\nfunction Focus({ focusLength, decrementFocusLength, incrementFocusLength, isDisabled }) {\r\n\r\n  \r\n\r\n\r\n  let focusLengthInMinutes = minutesToDuration(focusLength / 60)\r\n\r\n    \r\n  return (\r\n    <div className=\"input-group input-group-lg mb-2\">\r\n      <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n        {/* TODO: Update this text to display the current focus session duration */}\r\n        Focus Duration: {focusLengthInMinutes}\r\n      </span>\r\n      <div className=\"input-group-append\">\r\n        {/* TODO: Implement decreasing focus duration and disable during a focus or focus session */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-focus\"\r\n          onClick={decrementFocusLength}\r\n          disabled={isDisabled}\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        {/* TODO: Implement increasing focus duration  and disable during a focus or focus session */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-focus\"\r\n          onClick = {incrementFocusLength}\r\n          disabled = {isDisabled}\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Focus;\r\n","import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\n\r\nfunction Break({ breakLength, decrementBreakLength, incrementBreakLength, isDisabled }) {\r\n\r\n\r\nlet breakLengthInMinutes = minutesToDuration(breakLength / 60)\r\n\r\n\r\n  return (\r\n    <div className=\"float-right\">\r\n      <div className=\"input-group input-group-lg mb-2\">\r\n        <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n          {/* TODO: Update this text to display the current break session duration */}\r\n          Break Duration: {breakLengthInMinutes}\r\n        </span>\r\n        <div className=\"input-group-append\">\r\n          {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"decrease-break\"\r\n            onClick={decrementBreakLength}\r\n            disabled={isDisabled}\r\n          >\r\n            <span className=\"oi oi-minus\" />\r\n          </button>\r\n          {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"increase-break\"\r\n            onClick={incrementBreakLength}\r\n            disabled={isDisabled}\r\n          >\r\n            <span className=\"oi oi-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Break;\r\n","import React, { useState } from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst TimeLeft = ({ focusLength, breakLength, timeLeft, intervalId, currentSessionType, isTimerRunning, isDisabled }) => {\r\n\r\n  //change timeLeft whenever focusLength changes\r\n\r\n  let focusLengthInMinutes = secondsToDuration(focusLength);\r\n  let breakLengthInMinutes = secondsToDuration(breakLength);\r\n  let timeLeftInMinutesAndSeconds = secondsToDuration(timeLeft);\r\n\r\n  //if break, use breakLength for total time, focusLength for focus\r\n  let time = currentSessionType === 'Break' ? breakLength : focusLength\r\n\r\n  //percentage total time - time left for progress bar\r\n  let percentage = ((time - timeLeft )/ time) * 100\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n      <h2 data-testid=\"session-title\">\r\n        {currentSessionType === \"Focus\" ? \"Focusing\" : \"On Break\"} for{\" \"}\r\n        {currentSessionType === \"Focus\"\r\n          ? focusLengthInMinutes\r\n          : breakLengthInMinutes}{\" \"}\r\n        minutes\r\n      </h2>\r\n      {/* TODO: Update message below to include time remaining in the current session */}\r\n      <p className=\"lead\" data-testid=\"session-sub-title\">\r\n        {timeLeftInMinutesAndSeconds} remaining\r\n      </p>\r\n      <br/>\r\n      <br/>\r\n      <h3>{!isDisabled ? '' : isTimerRunning ? '' : 'PAUSED'}</h3>\r\n      <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percentage} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${percentage}%` }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeLeft;\r\n","import React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\nimport TimeLeft from \"./TimeLeft\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  //beginning of focus length\n  const [focusLength, setFocusLength] = useState(60 * 25);\n  // const [focusLength, setFocusLength] = useState(3);\n  const [breakLength, setBreakLength] = useState(60 * 5);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(focusLength);\n  const [intervalId, setIntervalId] = useState(null); //null when stopped\n  const [currentSessionType, setCurrentSessionType] = useState(\"Focus\"); //focus or break\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    setTimeLeft(focusLength);\n  }, [focusLength]);\n\n  useEffect(() => {\n    if (timeLeft < 0) {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/bell.mp3`).play();\n      //when timer ends and session type is focus, go to break\n      if (currentSessionType === 'Focus') {\n        setTimeLeft(breakLength);\n        setCurrentSessionType('Break');\n      } else {\n        setTimeLeft(focusLength);\n        setCurrentSessionType('Focus');\n      }\n    }\n  }, [timeLeft]);\n\n  useEffect(() => {\n    return () => {\n      //cleanup for interval, when it unmounts, clear it\n      clearInterval(intervalId);\n    }\n  }, [])\n\n  const decrementFocusLength = () => {\n    let newFocusLength = focusLength - 60 * 5;\n    if (newFocusLength < 300) { \n      setFocusLength(5 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  const incrementFocusLength = () => {\n    let newFocusLength = focusLength + 60 * 5;\n    if (newFocusLength > 60 * 60) {\n      setFocusLength(60 * 60);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  //beginning of break length\n  const decrementBreakLength = () => {\n    let newBreakLength = breakLength - 60;\n    if (newBreakLength < 60) {\n      setBreakLength(60);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    setBreakLength(breakLength + 60);\n  };\n\n  // Timer starts out paused\n  const playPause = () => {\n    setIsDisabled(true);\n    setIsTimerRunning((prevState) => !prevState);\n\n    if (isTimerRunning) {\n     // console.log(isStarted);\n      clearInterval(intervalId); //clear the interval that is stored in intervalID when timer starts\n      setIntervalId(null); //puts it back to null once you hit pause\n    } else {\n      //if we are in paused mode\n      const newIntervalId = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n        \n      setIntervalId(newIntervalId);\n    }\n      //setinterval makes a new id, returns the id of that timer and saving that as interval id (lets you clear the timer later)\n      //line 75 clears it\n  }\n\n  const stopSession = () => {\n    setIsDisabled(false);\n    setTimeLeft(focusLength);\n    setCurrentSessionType('Focus');\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Focus\n            focusLength={focusLength}\n            decrementFocusLength={decrementFocusLength}\n            incrementFocusLength={incrementFocusLength}\n            isDisabled={isDisabled}\n          />\n        </div>\n        <div className=\"col\">\n          <Break\n            breakLength={breakLength}\n            decrementBreakLength={decrementBreakLength}\n            incrementBreakLength={incrementBreakLength}\n            isDisabled={isDisabled}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n               <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              disabled={isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n        \n            <TimeLeft focusLength={focusLength} breakLength={breakLength} timeLeft={timeLeft} currentSessionType={currentSessionType} isTimerRunning={isTimerRunning} isDisabled={isDisabled} />\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}